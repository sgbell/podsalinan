Todo List
-----------------------------------------------------------------
* Create the Dialog Boxes for Adding URL to download, and Adding Rss Feeds, and Changing Directory
  -- Completed
* Make program download a file from the internet and store it in a storage directory.. IE podcast feed
  -- Program is downloading files, but need to change the way it works as it does not give
     a progress.
* Read the podcast feed, and extract the information to view.
	This being -
		Podcast img
		Each episode
		Episode Information
  -- Completed
* Need to fix the Downloader class. It's either downloading way too slow or it's just faulty. Need to
	download the file the old fashioned way.
  -- Completed	
* Use Wait/Notify between DownloadQueue and Downloader so we don't waste cpu cycles
	on nothing.
  -- Completed
* Add functionality to "Change Download Directory"
  + To do this we need to link the data in the podcast vector directly into rssfeed, saving
  		memory usage, and only having the information in 1 place.
  -- Completed
* Changing linking of RssFeed vector and DownloadQueue vector, so when details are changed from RssFeed,
	it automatically changes the details, as they will all be pointing to the same information.
  -- Completed
* Change Classes that extend Thread Class to Implement Runnable instead.
  --Completed
* Create a listener, as found in http://stackoverflow.com/questions/702415/how-to-know-if-other-threads-have-finished
	to monitor when a thread is finished and remove it from the downloaderqueue.
  -- Completed
* Scan the chosen directory to see what needs to be downloaded, and then proceed with a download queue.
  -- Completed
* Store program settings in config files.
  + Program should read settings from database
  		-- Completed
  + Program should write settings back to database on close
  		-- Completed
  -- Completed
* Store URL Downloads
	+ Need to Redesign Details class. It needs to hold the following:
		= the URL
		= added - Boolean value, to define if it has been added to the database.
		= removed - Boolean value, to define if it has been deleted from the system.
		-- Completed
	+ Create PodDetails class to extend Details Class to add details needed for
		podcasts.
		-- Completed 
  -- Completed
* Delete URL downloads
  -- Completed
* Set default settings when program first run
  -- Completed
* Create Thread or Timer to update the podcasts